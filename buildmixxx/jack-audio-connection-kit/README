JACK is a low-latency audio server written primarily for Linux.  It can
connect a number of different applications to an audio device, as well as
allow them to share audio among themselves.  Its clients can run in their
own processes (ie. as a normal application) or they can run within a JACK
server instance (i.e. as a "plugin").

jackd has to run with realtime privileges.  One way to do this on Slackware
would be to use set_rlimits.  Since 12.2 there's another way - if you have
a filesystem that supports posix capabilities (reiserfs does not), you can
grant jackd the rights to run in realtime mode, even when started as a
normal user, with the following command:

  setcap cap_ipc_lock,cap_sys_nice=ep /usr/bin/jackd

If you use qjackctl to start jack, it will need the same capabilities set
to be able to start jack as non-root user.  You can use the same command
with 'qjackctl' instead of 'jackd'

Optional dependencies are libffado and celt.
