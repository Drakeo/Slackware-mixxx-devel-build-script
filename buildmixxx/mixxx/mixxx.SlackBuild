#!/bin/sh

# Slackware build script for mixxx

# Copyright 2011 Elvio "HelLViS69" Basello <hellvis69@slackware.it>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


PRGNAM=mixxx
VERSION=${VERSION:-2.3}
BUILD=${BUILD:-1}
TAG=${TAG:-_DRKo}

# number of jobs set to your cpu cores
NPROC=$(nproc)
#SELECT YOUR TYPE OF CPU 
#  1  single-core (P-III and below)
#  2  P4
#  3  Intel Core
#  4  Core 2
#  5  Athlon-4/XP/MP
#  6  K8/Opteron/AMD64
#  7  K8/Opteron/AMD64 w/ SSE3  my default
#
OPTIMIZE=${OPTIMIZE:-" optimize=native "}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

set -e

if [ -f $CWD/$PRGNAM-$VERSION.tar.gz ]; then
 echo $PRGNAM-$VERSION.tar.gz built
else
	git clone https://github.com/mixxxdj/mixxx.git
	cd $CWD/$PRGNAM
	git checkout $VERSION
	sed -i 's/Exec=sh -c "pasuspender -- mixxx -platform xcb || mixxx -platform xcb"/Exec=sh -c "set_rlimits -r mixxx -platform xcb"/g' res/linux/mixxx.desktop
	cd $CWD
	mv  $PRGNAM  $PRGNAM-$VERSION
	tar cvf  $PRGNAM-$VERSION.tar.gz $PRGNAM-$VERSION
	rm -rf $PRGNAM-$VERSION
fi


if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
sleep 3

cd $PRGNAM-$VERSION
chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;
 
export PKG_CONFIG_PATH=/usr/lib$LIBDIRSUFFIX/pkgconfig

# it seems libshout isn't detected :(
  CFLAGS="$SLKCFLAGS" \
  QTDIR=/usr/lib$LIBDIRSUFFIX/ \
  LIBIR=/usr/lib$LIBDIRSUFFIX \
scons  -j$NPROC $OPTIMIZE \
  opus=1 \
  faad=1 \
  vamp=1 \
  ffmpeg=1 \
  prefix=/usr \
  LIBIR=/usr/lib$LIBDIRSUFFIX \
  QTDIR=/usr/lib$LIBDIRSUFFIX \
  install_root=$PKG/usr \
  prefix=/usr \
  install

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

 # Get the version
 GITREV=$(cat $TMP/$PRGNAM-$VERSION/lin64_build/src/build.h |head -n 2 | tail -1 | cut -c20-23)
  
cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-r$GITREV-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}


